infix + 4
infix - 4
infix * 5
infix / 5

trait Num a
    + :: a -> a -> a
    - :: a -> a -> a
    * :: a -> a -> a
    / :: a -> a -> a

impl Num Int64
    + a b = ~IAdd a b
    - a b = ~ISub a b
    * a b = ~IMul a b
    / a b = ~IDiv a b

impl Num Float64
    + c d = ~FAdd c d
    - c d = ~FSub c d
    * c d = ~FMul c d
    / c d = ~FDiv c d

use super::externs::c_malloc
use super::externs::c_strlen
use super::externs::c_strcpy
use super::externs::c_strcat

impl Num String
    + a b =
        let s = c_malloc (c_strlen a + c_strlen b)
        c_strcpy s, a
        c_strcat s, b
        s

use Num::(*)
